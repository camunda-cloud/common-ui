:host {
	display: inline-block;
	width: 100%;
	scroll-margin: 30px;
}

.container {
	display: grid;
	font-family: var(--cm-font-text);
	box-sizing: border-box;
	position: relative;

	* {
		box-sizing: border-box;
	}

	&.vertical {
		grid-template-areas:
			'labelContainer'
			'valueLabelContainer';
		grid-template-columns: 1fr;
		grid-template-rows: max-content minmax(32px, max-content);

		&.hasError {
			grid-template-areas:
				'labelContainer'
				'valueLabelContainer'
				'error';
			grid-template-columns: 1fr;
			grid-template-rows: max-content minmax(32px, max-content) max-content;
		}

		.labelContainer {
			grid-area: labelContainer;
			display: grid;

			padding-left: 1px;
			padding-right: 3px;
			padding-bottom: 4px;

			grid-template-areas:
				'label      requiredStatus'
				'helperText helperText';
		}
	}

	&.horizontal {
		grid-template-areas: 'labelContainer valueLabelContainer';
		grid-template-columns: max-content 1fr;
		grid-template-rows: minmax(32px, max-content);
		gap: 0px 10px;

		&.hasError {
			grid-template-areas:
				'labelContainer valueLabelContainer'
				'.              error';
			grid-template-columns: max-content 1fr;
			grid-template-rows: minmax(32px, max-content) max-content;
			gap: 5px 10px;
		}

		.labelContainer {
			grid-area: labelContainer;
			display: grid;

			grid-template-areas: 'label requiredStatus';
		}
	}

	&:hover {
		.valueLabelContainer {
			border: solid 1px var(--cm-color-blue-base);
		}
	}

	&:not(.disabled):not(.isOpen):not(.hasError):focus-within {
		.valueLabelContainer {
			box-shadow: 0 0 0 2px var(--cm-color-focus-outer-neutral);
			border: solid 1px var(--cm-color-blue-base);
		}
	}

	&.disabled {
		cursor: not-allowed;

		.valueLabelContainer {
			border: solid 1px var(--cm-color-ui-light5);
			background-color: var(--cm-color-button-light4);

			.suffix {
				opacity: 0.5;
			}
		}
	}

	&.hasError {
		.valueLabelContainer {
			border-color: var(--cm-color-red-base);
		}

		&:focus-within {
			.valueLabelContainer {
				border-color: var(--cm-color-red-base);
				box-shadow: 0px 0px 0px 2px var(--cm-color-focus-outer-danger);
			}
		}
	}

	.Dark {
		.valueLabelContainer {
			textarea {
				&::-webkit-resizer {
					background-image: url("data:image/svg+xml,%3Csvg width='10' height='10' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M8.536 5L9.95 6.414 6.414 9.95 5 8.536 8.536 5zm-.05-5l1.413 1.414L1.414 9.9 0 8.485 8.485 0z' fill='%23FDFDFE' fill-rule='evenodd'/%3E%3C/svg%3E");
				}
			}
		}
	}

	.label {
		grid-area: label;
		display: grid;

		align-content: center;

		font-size: 13px;
		font-weight: 500;
		color: var(--cm-color-ui-light6);
	}

	.helperText {
		grid-area: helperText;
		user-select: none;
	}

	.requiredStatus {
		grid-area: requiredStatus;
		justify-self: flex-end;
	}

	.valueLabelContainer {
		grid-area: valueLabelContainer;

		display: grid;

		grid-template-areas: 'prefix valueLabel suffix';
		grid-template-columns: max-content 1fr max-content;
		align-items: center;

		min-height: 30px;

		border-radius: 3px;
		border: solid 1px var(--cm-color-ui-light3);
		background-color: var(--cm-color-ui-light4);

		transition: border linear 200ms, box-shadow linear 200ms;

		&:focus {
			outline: none;
		}

		.prefix {
			grid-area: prefix;
			display: grid;
			grid-auto-flow: column;
			height: 30px;
			align-items: center;
			align-self: flex-start;

			border-bottom-left-radius: 3px;
			border-top-left-radius: 3px;

			&.empty {
				width: 10px;
			}

			&.icon {
				width: 30px;
				justify-items: center;
			}
		}

		.valueLabel {
			grid-area: valueLabel;
			font-size: 14px;
			color: var(--cm-color-ui-dark4);

			&.placeholder {
				font-style: italic;
				color: var(--cm-color-ui-light6);
			}

			&.text {
				text-overflow: ellipsis;
				overflow: hidden;
				white-space: nowrap;
			}

			&.tags {
				display: flex;
				flex-wrap: wrap;
				gap: 5px;
				min-height: 30px;
				padding: 4px 0px;

				&.hasClear {
					padding-right: 10px;
				}

				.tag {
					user-select: none;
					display: grid;
					grid-auto-flow: column;
					gap: 5px;

					align-items: center;

					width: max-content;
					height: 22px;

					padding: 0px 2px 0px 8px;
					border-radius: 11px;
					border: solid 1px var(--cm-color-button-blue1);
					background-color: var(--cm-color-link-active-dark);

					font-size: 14px;
					color: var(--cm-color-ui-dark4);

					.delete {
						cursor: pointer;
						display: grid;
						justify-content: center;
						align-items: center;

						width: 16px;
						height: 16px;
						border-radius: 100%;

						background-color: var(--cm-color-button-blue1);
					}
				}
			}
		}

		.suffix {
			grid-area: suffix;
			display: grid;
			grid-auto-flow: column;
			height: 30px;
			align-items: center;
			align-self: flex-start;

			border-bottom-right-radius: 3px;
			border-top-right-radius: 3px;

			&.icon {
				width: 30px;
				justify-items: center;
			}

			&.clear {
				gap: 6px;

				.clear {
					cursor: pointer;
					display: grid;
					justify-content: center;
					align-items: center;

					width: 16px;
					height: 16px;
					border-radius: 100%;

					background-color: var(--cm-color-ui-light3);
				}

				.icon {
					display: grid;
					width: 30px;
					justify-items: center;
				}
			}
		}
	}

	.errorMessage {
		display: grid;

		grid-auto-flow: column;
		grid-auto-columns: max-content 1fr;

		gap: 6px;
		padding-left: 6px;

		font-size: 13px;
		color: var(--cm-color-red-base);

		&:not(:empty) {
			padding-top: 8px;
		}
	}
}
