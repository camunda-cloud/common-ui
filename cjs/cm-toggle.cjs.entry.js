"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const index=require("./index-10f7a7fe.js"),cmToggleCss=':host{display:inline-block}.container:focus{outline:none}.container:focus-visible .toggle{box-shadow:0px 0px 0px 1px var(--cm-color-focus-inner-neutral2), 0px 0px 0px 4px var(--cm-color-focus-outer-neutral)}.toggle{position:relative;display:inline-block;height:18px;width:30px;background:var(--cm-color-ui-light3);border-radius:9px;vertical-align:bottom;transition:all 0.2s linear}.toggle::before{content:"";position:absolute;top:3px;left:3px;height:12px;width:12px;border-radius:12px;background:white;transition:all 0.2s linear}.toggle.checked{background:var(--cm-color-button-blue4)}.toggle.checked::before{left:15px}.toggle.checked.disabled{background:var(--cm-color-blue-base)}.toggle:not(.checked).disabled{background:var(--cm-color-ui-light5)}label{display:inline-block;padding-left:8px;user-select:none;font-family:var(--cm-font-text);font-size:14px;height:20px;line-height:20px}label:empty{display:none}',CmToggle=class{constructor(hostRef){index.registerInstance(this,hostRef),this.cmInput=index.createEvent(this,"cmInput",7),this.label="",this.checked=!1,this.disabled=!1,this.enableAttributeEmit=!1}checkedChangeHandler(){this.enableAttributeEmit&&this.cmInput.emit({isChecked:this.checked,triggeredBy:"API"})}handleKeyDown(event){" "===event.key&&(this.disabled||(this.toggleCheck({triggeredBy:"User"}),event.preventDefault()))}handleClick(){this.disabled||this.toggleCheck({triggeredBy:"User"})}async toggleCheck(options={}){var _a;this.disabled&&!options.forceToggle||(this.checked=!this.checked,this.cmInput.emit({isChecked:this.checked,triggeredBy:null!==(_a=options.triggeredBy)&&void 0!==_a?_a:"API"}))}async check(options={}){var _a;this.disabled&&!options.forceCheck||!1===this.checked&&(this.checked=!0,this.cmInput.emit({isChecked:this.checked,triggeredBy:null!==(_a=options.triggeredBy)&&void 0!==_a?_a:"API"}))}async uncheck(options={}){var _a;this.disabled&&!options.forceUncheck||!0===this.checked&&(this.checked=!1,this.cmInput.emit({isChecked:this.checked,triggeredBy:null!==(_a=options.triggeredBy)&&void 0!==_a?_a:"API"}))}render(){let toggleClasses={toggle:!0,checked:this.checked,disabled:this.disabled},tabIndex=0;return this.disabled&&(tabIndex=-1),index.h(index.Host,null,index.h("div",{class:"container",tabindex:tabIndex},index.h("div",{class:toggleClasses,ref:element=>this.toggle=element,role:"checkbox","aria-disabled":this.disabled}),index.h("label",{onClick:()=>{this.disabled||this.toggle.focus()}},this.label)))}static get watchers(){return{checked:["checkedChangeHandler"]}}};CmToggle.style=cmToggleCss,exports.cm_toggle=CmToggle;