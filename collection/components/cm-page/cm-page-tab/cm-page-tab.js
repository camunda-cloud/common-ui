import{Component,h,Element,Event,Prop,Watch,Host}from"@stencil/core";export class CmPageTab{constructor(){this.defaultActive=!1,this.active=this.defaultActive}labelWatchHandler(){this.tabModified.emit()}activeWatchHandler(newValue){null==newValue&&(this.active=this.defaultActive)}componentWillRender(){this.activeWatchHandler(this.active)}render(){return h(Host,{role:"tabpanel",id:this.label,"aria-expanded":this.active,"aria-hidden":!this.active},h("slot",null))}static get is(){return"cm-page-tab"}static get encapsulation(){return"shadow"}static get originalStyleUrls(){return{$:["cm-page-tab.scss"]}}static get styleUrls(){return{$:["cm-page-tab.css"]}}static get properties(){return{label:{type:"string",mutable:!0,complexType:{original:"string",resolved:"string",references:{}},required:!1,optional:!1,docs:{tags:[],text:""},attribute:"label",reflect:!0},active:{type:"boolean",mutable:!0,complexType:{original:"boolean",resolved:"boolean",references:{}},required:!1,optional:!1,docs:{tags:[],text:""},attribute:"active",reflect:!0,defaultValue:"this.defaultActive"}}}static get events(){return[{method:"tabModified",name:"tabModified",bubbles:!0,cancelable:!0,composed:!0,docs:{tags:[],text:"Emitted when the Tab is modified, e.g. when the label is changed."},complexType:{original:"any",resolved:"any",references:{}}}]}static get elementRef(){return"root"}static get watchers(){return[{propName:"label",methodName:"labelWatchHandler"},{propName:"active",methodName:"activeWatchHandler"}]}}