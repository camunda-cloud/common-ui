import{Component,Prop,Event,Element,Watch,Listen,Host,h}from"@stencil/core";export class CmPageTabHandle{constructor(){this.defaultActive=!1,this.active=this.defaultActive}activeWatchHandler(newValue){null==newValue&&(this.active=this.defaultActive)}clickEventHandler(event){this.userSelectedTab.emit({originalEvent:event,handle:this.root,label:this.label})}handleKeyDown(event){" "!==event.key&&"Enter"!==event.key||this.userSelectedTab.emit({originalEvent:event,handle:this.root,label:this.label})}componentWillRender(){this.activeWatchHandler(this.active)}render(){let classes={active:this.active};return h(Host,null,h("span",{class:classes,"data-label":this.label,ref:element=>this.span=element,tabindex:"0",role:"tab","aria-controls":this.label,"aria-selected":this.active},this.label))}static get is(){return"cm-page-tab-handle"}static get encapsulation(){return"shadow"}static get originalStyleUrls(){return{$:["cm-page-tab-handle.scss"]}}static get styleUrls(){return{$:["cm-page-tab-handle.css"]}}static get properties(){return{label:{type:"string",mutable:!0,complexType:{original:"string",resolved:"string",references:{}},required:!1,optional:!1,docs:{tags:[],text:""},attribute:"label",reflect:!1},active:{type:"boolean",mutable:!0,complexType:{original:"boolean",resolved:"boolean",references:{}},required:!1,optional:!1,docs:{tags:[],text:""},attribute:"active",reflect:!0,defaultValue:"this.defaultActive"}}}static get events(){return[{method:"userSelectedTab",name:"userSelectedTab",bubbles:!0,cancelable:!0,composed:!0,docs:{tags:[],text:"Emitted when the Tab is being selected by the user."},complexType:{original:"{\n\t\toriginalEvent: MouseEvent | KeyboardEvent\n\t\thandle: HTMLCmPageTabHandleElement\n\t\tlabel: string\n\t}",resolved:"{ originalEvent: MouseEvent | KeyboardEvent; handle: HTMLCmPageTabHandleElement; label: string; }",references:{MouseEvent:{location:"global"},KeyboardEvent:{location:"global"},HTMLCmPageTabHandleElement:{location:"global"}}}}]}static get elementRef(){return"root"}static get watchers(){return[{propName:"active",methodName:"activeWatchHandler"}]}static get listeners(){return[{name:"click",method:"clickEventHandler",target:void 0,capture:!1,passive:!1},{name:"keydown",method:"handleKeyDown",target:void 0,capture:!1,passive:!1}]}}