import{Component,Host,h,Prop,Event,Element,State}from"@stencil/core";export class CmCard{constructor(){this.isDismissable=!1,this.hasFooterContent=!1}componentDidRender(){requestAnimationFrame((()=>{let footerSlot=this.element.shadowRoot.querySelector("slot[name=footer]");footerSlot&&(this.hasFooterContent=footerSlot.assignedElements().length>0)}))}componentDidLoad(){let footerSlot=this.element.shadowRoot.querySelector("slot[name=footer]");footerSlot.addEventListener("slotchange",(()=>{this.hasFooterContent=footerSlot.assignedElements().length>0}))}render(){const contentClasses={content:!0,hasFooterContent:this.hasFooterContent};return h(Host,null,h("div",{class:"container"},h("slot",{name:"header"}),h("div",{class:contentClasses},h("slot",null)),h("slot",{name:"footer"}),this.isDismissable?h("cm-icon-button",{id:"dismissButton",icon:"closeLarge",onCmPress:()=>{this.cmDismissed.emit()}}):""))}static get is(){return"cm-card"}static get encapsulation(){return"shadow"}static get originalStyleUrls(){return{$:["cm-card.scss"]}}static get styleUrls(){return{$:["cm-card.css"]}}static get properties(){return{isDismissable:{type:"boolean",mutable:!0,complexType:{original:"boolean",resolved:"boolean",references:{}},required:!1,optional:!1,docs:{tags:[],text:"Adds a Dismiss-Button to the Card, which fires the `cmDismissed` Event when pressed."},attribute:"is-dismissable",reflect:!1,defaultValue:"false"}}}static get states(){return{hasFooterContent:{}}}static get events(){return[{method:"cmDismissed",name:"cmDismissed",bubbles:!0,cancelable:!0,composed:!0,docs:{tags:[],text:"Emitted when the Card is being dismissed. Has no default action."},complexType:{original:"{}",resolved:"{}",references:{}}}]}static get elementRef(){return"element"}}