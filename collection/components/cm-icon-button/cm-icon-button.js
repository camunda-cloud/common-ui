import{Component,Host,h,Prop,Listen,Event,Element,Method}from"@stencil/core";export class CmIconButton{constructor(){this.disabled=!1,this.ignoreTheme=!1}async press(options={}){this.disabled&&!options.forcePress||this.cmPress.emit()}handleClick(){this.disabled||this.press()}handleKeyDown(event){" "!==event.key&&"Enter"!==event.key||this.disabled||this.press()}render(){let classes={disabled:this.disabled},tabIndex=0;return this.disabled&&(tabIndex=-1),h(Host,null,h("div",{tabindex:tabIndex,class:classes,role:"button","aria-disabled":this.disabled,"aria-label":this.icon},h("cm-icon",{icon:this.icon,color:this.color,ignoreTheme:this.ignoreTheme})))}static get is(){return"cm-icon-button"}static get encapsulation(){return"shadow"}static get originalStyleUrls(){return{$:["cm-icon-button.scss"]}}static get styleUrls(){return{$:["cm-icon-button.css"]}}static get properties(){return{icon:{type:"string",mutable:!0,complexType:{original:"CmIcon['icon']",resolved:'"check" | "close" | "closeLarge" | "contextMenu" | "copy" | "delete" | "document" | "down" | "edit" | "email" | "external" | "help" | "hide" | "information" | "left" | "minus" | "plus" | "right" | "search" | "show" | "sort" | "stop" | "up" | "warning"',references:{CmIcon:{location:"import",path:"../cm-icon/cm-icon"}}},required:!1,optional:!1,docs:{tags:[],text:""},attribute:"icon",reflect:!1},color:{type:"string",mutable:!0,complexType:{original:"CmIcon['color']",resolved:'"bright" | "danger" | "dark" | "medium" | "success" | "warning"',references:{CmIcon:{location:"import",path:"../cm-icon/cm-icon"}}},required:!1,optional:!1,docs:{tags:[],text:""},attribute:"color",reflect:!1},disabled:{type:"boolean",mutable:!0,complexType:{original:"boolean",resolved:"boolean",references:{}},required:!1,optional:!1,docs:{tags:[],text:""},attribute:"disabled",reflect:!1,defaultValue:"false"},ignoreTheme:{type:"boolean",mutable:!0,complexType:{original:"boolean",resolved:"boolean",references:{}},required:!1,optional:!1,docs:{tags:[],text:""},attribute:"ignore-theme",reflect:!1,defaultValue:"false"}}}static get events(){return[{method:"cmPress",name:"cmPress",bubbles:!0,cancelable:!0,composed:!0,docs:{tags:[],text:"Emitted when the button is pressed or either Spacebar or Enter are being pressed when the button is focused."},complexType:{original:"{}",resolved:"{}",references:{}}}]}static get methods(){return{press:{complexType:{signature:"(options?: { forcePress?: boolean; }) => Promise<void>",parameters:[{tags:[],text:""}],references:{Promise:{location:"global"}},return:"Promise<void>"},docs:{text:"Triggers the press event. Respects the disabled state unless forced.",tags:[]}}}}static get elementRef(){return"el"}static get listeners(){return[{name:"click",method:"handleClick",target:void 0,capture:!1,passive:!1},{name:"keydown",method:"handleKeyDown",target:void 0,capture:!1,passive:!1}]}}