import{Component,Host,h,Prop,Listen,Event,Method,Watch}from"@stencil/core";export class CmToggle{constructor(){this.label="",this.checked=!1,this.disabled=!1,this.enableAttributeEmit=!1}checkedChangeHandler(){this.enableAttributeEmit&&this.cmInput.emit({isChecked:this.checked,triggeredBy:"API"})}handleKeyDown(event){" "===event.key&&(this.disabled||(this.toggleCheck({triggeredBy:"User"}),event.preventDefault()))}handleClick(){this.disabled||this.toggleCheck({triggeredBy:"User"})}async toggleCheck(options={}){var _a;this.disabled&&!options.forceToggle||(this.checked=!this.checked,this.cmInput.emit({isChecked:this.checked,triggeredBy:null!==(_a=options.triggeredBy)&&void 0!==_a?_a:"API"}))}async check(options={}){var _a;this.disabled&&!options.forceCheck||!1===this.checked&&(this.checked=!0,this.cmInput.emit({isChecked:this.checked,triggeredBy:null!==(_a=options.triggeredBy)&&void 0!==_a?_a:"API"}))}async uncheck(options={}){var _a;this.disabled&&!options.forceUncheck||!0===this.checked&&(this.checked=!1,this.cmInput.emit({isChecked:this.checked,triggeredBy:null!==(_a=options.triggeredBy)&&void 0!==_a?_a:"API"}))}render(){let toggleClasses={toggle:!0,checked:this.checked,disabled:this.disabled},tabIndex=0;return this.disabled&&(tabIndex=-1),h(Host,null,h("div",{class:"container",tabindex:tabIndex},h("div",{class:toggleClasses,ref:element=>this.toggle=element,role:"checkbox","aria-disabled":this.disabled}),h("label",{onClick:()=>{this.disabled||this.toggle.focus()}},this.label)))}static get is(){return"cm-toggle"}static get encapsulation(){return"shadow"}static get originalStyleUrls(){return{$:["cm-toggle.scss"]}}static get styleUrls(){return{$:["cm-toggle.css"]}}static get properties(){return{label:{type:"string",mutable:!0,complexType:{original:"string",resolved:"string",references:{}},required:!1,optional:!1,docs:{tags:[],text:""},attribute:"label",reflect:!0,defaultValue:"''"},checked:{type:"boolean",mutable:!0,complexType:{original:"boolean",resolved:"boolean",references:{}},required:!1,optional:!1,docs:{tags:[],text:""},attribute:"checked",reflect:!0,defaultValue:"false"},disabled:{type:"boolean",mutable:!0,complexType:{original:"boolean",resolved:"boolean",references:{}},required:!1,optional:!1,docs:{tags:[],text:""},attribute:"disabled",reflect:!0,defaultValue:"false"},enableAttributeEmit:{type:"boolean",mutable:!0,complexType:{original:"boolean",resolved:"boolean",references:{}},required:!1,optional:!1,docs:{tags:[],text:"Enables `cmInput` Events being emitted when the checked attribute changes."},attribute:"enable-attribute-emit",reflect:!0,defaultValue:"false"}}}static get events(){return[{method:"cmInput",name:"cmInput",bubbles:!0,cancelable:!0,composed:!0,docs:{tags:[],text:"Emitted whenever the checked state changes."},complexType:{original:"{\n\t\tisChecked: boolean\n\t\ttriggeredBy: 'User' | 'API'\n\t}",resolved:'{ isChecked: boolean; triggeredBy: "User" | "API"; }',references:{}}}]}static get methods(){return{toggleCheck:{complexType:{signature:"(options?: { forceToggle?: boolean; triggeredBy?: 'User' | 'API'; }) => Promise<void>",parameters:[{tags:[],text:""}],references:{Promise:{location:"global"}},return:"Promise<void>"},docs:{text:"Toggles the checked state. Respects the disabled state, unless forced.",tags:[]}},check:{complexType:{signature:"(options?: { forceCheck?: boolean; triggeredBy?: 'User' | 'API'; }) => Promise<void>",parameters:[{tags:[],text:""}],references:{Promise:{location:"global"}},return:"Promise<void>"},docs:{text:"Sets the checked state to true. Respects the disabled state, unless forced.",tags:[]}},uncheck:{complexType:{signature:"(options?: { forceUncheck?: boolean; triggeredBy?: 'User' | 'API'; }) => Promise<void>",parameters:[{tags:[],text:""}],references:{Promise:{location:"global"}},return:"Promise<void>"},docs:{text:"Sets the checked state to false. Respects the disabled state, unless forced.",tags:[]}}}}static get watchers(){return[{propName:"checked",methodName:"checkedChangeHandler"}]}static get listeners(){return[{name:"keydown",method:"handleKeyDown",target:void 0,capture:!1,passive:!1},{name:"click",method:"handleClick",target:void 0,capture:!1,passive:!1}]}}